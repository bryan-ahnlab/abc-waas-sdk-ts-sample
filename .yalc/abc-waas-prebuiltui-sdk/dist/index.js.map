{"version":3,"sources":["../src/utilities/google.ts","../src/utilities/naver.ts","../src/utilities/line.ts","../src/utilities/kakao.ts","../src/utilities/apple.ts","../src/components/Login.tsx"],"names":["createRemoteJWKSet","jwtVerify","SignJWT","useLogin","useCallback","error","useEffect","jsxs","jsx","Fragment"],"mappings":"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","file":"index.js","sourcesContent":["// src/utilities/google.ts\n\nexport const getGoogleToken = async (\n  code: string,\n  clientId: string,\n  clientSecret: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    const response = await fetch(\"https://oauth2.googleapis.com/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.id_token) {\n      throw new Error(\"Failed to receive id_token from Google.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getGoogleTokeninfo = async (idToken: string) => {\n  try {\n    const payload = new URLSearchParams({\n      idToken,\n    });\n\n    const response = await fetch(\n      \"https://www.googleapis.com/oauth2/v1/tokeninfo\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: payload.toString(),\n      }\n    );\n\n    const data = await response.json();\n\n    if (!data?.email) {\n      throw new Error(\"Failed to receive email from Google.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/naver.ts\n\nexport const getNaverToken = async (\n  code: string,\n  clientId: string,\n  clientSecret: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    /* https://nid.naver.com/oauth2.0/token */\n    const response = await fetch(\"/proxy/naver/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.access_token) {\n      throw new Error(\"Failed to receive access_token from Naver.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getNaverTokeninfo = async (accessToken: string) => {\n  try {\n    /* https://openapi.naver.com/v1/nid/me */\n    const response = await fetch(\"/proxy/naver/tokeninfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    const data = await response.json();\n\n    if (!data?.message || data?.message !== \"success\") {\n      throw new Error(\"Failed to receive message from Naver.\");\n    }\n\n    if (!data?.resultcode || data?.resultcode !== \"00\") {\n      throw new Error(\"Failed to receive resultcode from Naver.\");\n    }\n\n    if (!data?.response?.email) {\n      throw new Error(\"Failed to receive email from Naver.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/line.ts\n\nexport const getLineToken = async (\n  code: string,\n  clientId: string,\n  clientSecret: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    const response = await fetch(\"https://api.line.me/oauth2/v2.1/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.id_token) {\n      throw new Error(\"Failed to receive id_token from Line.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getLineTokeninfo = async (idToken: string, clientId: string) => {\n  try {\n    const payload = new URLSearchParams({\n      id_token: idToken,\n      client_id: clientId,\n    });\n\n    const response = await fetch(\"https://api.line.me/oauth2/v2.1/verify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.email) {\n      throw new Error(\"Failed to receive email from Line.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/kakao.ts\n\nimport { createRemoteJWKSet, jwtVerify } from \"jose\";\n\nexport const getKakaoToken = async (\n  code: string,\n  clientId: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    const response = await fetch(\"https://kauth.kakao.com/oauth/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.id_token) {\n      throw new Error(\"Failed to receive id_token from Kakao.\");\n    }\n\n    if (!data?.access_token) {\n      throw new Error(\"Failed to receive access_token from Kakao.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const verifyKakaoToken = async (idToken: string, restApiKey: string) => {\n  try {\n    const KAKAO_ISS = \"https://kauth.kakao.com\";\n    const KAKAO_JWKS_URL = `${KAKAO_ISS}/.well-known/jwks.json`;\n\n    const kakaoJwks = createRemoteJWKSet(new URL(KAKAO_JWKS_URL));\n\n    const { payload: data } = await jwtVerify(idToken, kakaoJwks, {\n      issuer: KAKAO_ISS,\n      audience: restApiKey,\n    });\n\n    const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n\n    if (!data?.email) {\n      throw new Error(\"Failed to receive email from Kakao.\");\n    }\n\n    if (!data?.iss || data?.iss !== KAKAO_ISS) {\n      throw new Error(\"Invalid issuer from Kakao.\");\n    }\n\n    if (!data?.aud || data?.aud !== restApiKey) {\n      throw new Error(\"Invalid audience from Kakao.\");\n    }\n\n    if (!data?.exp || currentTimeInSeconds >= data?.exp) {\n      throw new Error(\"id_token is expired from Kakao.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getKakaoTokeninfo = async (accessToken: string) => {\n  try {\n    const response = await fetch(\"https://kapi.kakao.com/v2/user/me\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    const data = await response.json();\n\n    if (!data?.kakao_account?.email) {\n      throw new Error(\"Failed to receive email from Kakao.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/apple.ts\n\nimport { createRemoteJWKSet, jwtVerify, SignJWT } from \"jose\";\n\nexport const getAppleToken = async (\n  code: string,\n  clientId: string,\n  clientSecret: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    /* https://appleid.apple.com/auth/token */\n    const response = await fetch(\"/proxy/apple/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.id_token) {\n      throw new Error(\"Failed to receive id_token from Apple.\");\n    }\n\n    const decodedData = JSON.parse(atob(data?.id_token?.split(\".\")[1]));\n\n    if (!decodedData?.email) {\n      throw new Error(\"Failed to receive email from Apple.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const verifyAppleToken = async (idToken: string, clientId: string) => {\n  try {\n    const APPLE_ISS = \"https://appleid.apple.com\";\n    const APPLE_JWKS_URL = \"https://appleid.apple.com/auth/keys\";\n\n    const appleJwks = createRemoteJWKSet(new URL(APPLE_JWKS_URL));\n\n    const { payload: data } = await jwtVerify(idToken, appleJwks, {\n      issuer: APPLE_ISS,\n      audience: clientId,\n    });\n\n    const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n\n    if (!data?.email) {\n      throw new Error(\"Failed to receive email from Apple.\");\n    }\n\n    if (!data?.iss || data?.iss !== APPLE_ISS) {\n      throw new Error(\"Invalid issuer from Apple.\");\n    }\n\n    if (!data?.aud || data?.aud !== clientId) {\n      throw new Error(\"Invalid audience from Apple.\");\n    }\n\n    if (!data?.exp || currentTimeInSeconds >= data?.exp) {\n      throw new Error(\"id_token is expired from Apple.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const createAppleClientSecret = async (\n  idToken: string,\n  privateKey: string,\n  teamId: string,\n  keyId: string\n) => {\n  try {\n    const alg = \"ES256\" as const;\n\n    const base64Payload = idToken.split(\".\")[1];\n    const payloadString = atob(base64Payload);\n    const payload = JSON.parse(payloadString);\n\n    const audience = payload.aud;\n    const issuer = payload.iss;\n\n    if (!audience || !issuer) {\n      throw new Error(\"Invalid id_token: missing aud or iss.\");\n    }\n\n    const base64Key = privateKey\n      .replace(\"-----BEGIN PRIVATE KEY-----\", \"\")\n      .replace(\"-----END PRIVATE KEY-----\", \"\")\n      .replace(/\\s+/g, \"\");\n    const rawKey = Uint8Array.from(atob(base64Key), (c) => c.charCodeAt(0));\n\n    const cryptoKey = await crypto.subtle.importKey(\n      \"pkcs8\",\n      rawKey.buffer,\n      { name: \"ECDSA\", namedCurve: \"P-256\" },\n      false,\n      [\"sign\"]\n    );\n\n    const jwt = await new SignJWT({})\n      .setProtectedHeader({ alg, kid: keyId })\n      .setIssuer(teamId)\n      .setIssuedAt()\n      .setExpirationTime(\"1h\")\n      .setAudience(issuer)\n      .setSubject(audience)\n      .sign(cryptoKey);\n\n    return jwt;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/components/Login.tsx\n\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { useLogin } from \"abc-waas-core-sdk\";\n\nimport GoogleIcon from \"@/assets/icons/providers/icon_google.svg\";\nimport AppleIcon from \"@/assets/icons/providers/icon_apple.svg\";\nimport KakaoIcon from \"@/assets/icons/providers/icon_kakao.svg\";\nimport NaverIcon from \"@/assets/icons/providers/icon_naver.svg\";\nimport LineIcon from \"@/assets/icons/providers/icon_line.svg\";\n\nimport LoadingAnimation from \"@/assets/animations/common/animation_loading.svg\";\n\nimport { getGoogleToken, getGoogleTokeninfo } from \"@/utilities/google\";\nimport { getNaverToken, getNaverTokeninfo } from \"@/utilities/naver\";\nimport { getLineToken, getLineTokeninfo } from \"@/utilities/line\";\nimport {\n  getKakaoToken,\n  getKakaoTokeninfo,\n  verifyKakaoToken,\n} from \"@/utilities/kakao\";\nimport {\n  createAppleClientSecret,\n  getAppleToken,\n  verifyAppleToken,\n} from \"@/utilities/apple\";\n\ntype Providers = \"google\" | \"apple\" | \"kakao\" | \"naver\" | \"line\";\n\nconst providers: {\n  type: Providers;\n  label: string;\n  icon: string;\n  backgroundColor: string;\n  textColor: string;\n  hoverColor: string;\n  border: string;\n}[] = [\n  {\n    type: \"google\",\n    label: \"Google로 계속하기\",\n    icon: GoogleIcon,\n    backgroundColor: \"#ffffff\",\n    textColor: \"#000000\",\n    hoverColor: \"#f7f7f7\",\n    border: \"1px solid #dadce0\",\n  },\n  {\n    type: \"apple\",\n    label: \"Apple로 계속하기\",\n    icon: AppleIcon,\n    backgroundColor: \"#ffffff\",\n    textColor: \"#000000\",\n    hoverColor: \"#f7f7f7\",\n    border: \"1px solid #dadce0\",\n  },\n  {\n    type: \"naver\",\n    label: \"네이버로 계속하기\",\n    icon: NaverIcon,\n    backgroundColor: \"#ffffff\",\n    textColor: \"#000000\",\n    hoverColor: \"#f7f7f7\",\n    border: \"1px solid #dadce0\",\n  },\n  {\n    type: \"kakao\",\n    label: \"카카오로 계속하기\",\n    icon: KakaoIcon,\n    backgroundColor: \"#FEE500\",\n    textColor: \"#000000\",\n    hoverColor: \"#ecd900\",\n    border: \"1px solid #FEE500\",\n  },\n  {\n    type: \"line\",\n    label: \"LINE으로 계속하기\",\n    icon: LineIcon,\n    backgroundColor: \"#03C75A\",\n    textColor: \"#ffffff\",\n    hoverColor: \"#02b94e\",\n    border: \"1px solid #03C75A\",\n  },\n];\n\nconst metaContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: \"100%\",\n  height: \"100vh\",\n  backgroundColor: \"#f5f5f5\",\n} as const;\n\nconst containerStyle = {\n  width: \"100%\",\n  maxWidth: \"360px\",\n  boxSizing: \"border-box\",\n  padding: \"40px 30px\",\n  borderRadius: \"30px\",\n  color: \"#333\",\n  boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.05)\",\n  whiteSpace: \"pre-wrap\",\n  wordBreak: \"break-all\",\n  backgroundColor: \"#ffffff\",\n} as const;\n\nconst titleContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n} as const;\n\nconst contentContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n} as const;\n\nconst buttonBaseStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  padding: \"12px 16px\",\n  fontSize: \"16px\",\n  borderRadius: \"30px\",\n  width: \"100%\",\n  marginBottom: \"12px\",\n  cursor: \"pointer\",\n  transition: \"all 0.2s ease-in-out\",\n  wordBreak: \"break-all\",\n  flexWrap: \"wrap\",\n  gap: \"12px\",\n} as const;\n\nexport default function Login() {\n  const navigate = (path: string) => {\n    window.location.href = path;\n  };\n\n  const location = {\n    search: window.location.search,\n    hash: window.location.hash,\n    pathname: window.location.pathname,\n  };\n\n  const { loginV2, loading, setLoading, error, setError, service } = useLogin();\n\n  const handleRedirect = (provider: Providers) => {\n    localStorage.setItem(\"provider\", provider);\n\n    if (provider === \"google\") {\n      if (\n        !process.env.REACT_APP_GOOGLE_CLIENT_ID ||\n        !process.env.REACT_APP_GOOGLE_REDIRECT_URI\n      ) {\n        throw new Error(\"Google client ID or redirect URI is not set.\");\n      }\n\n      const state = crypto.randomUUID();\n      localStorage.setItem(\"google_oauth_state\", state);\n\n      const url = new URL(\"https://accounts.google.com/o/oauth2/v2/auth\");\n      url.searchParams.set(\"client_id\", process.env.REACT_APP_GOOGLE_CLIENT_ID);\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_GOOGLE_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code\");\n      url.searchParams.set(\n        \"scope\",\n        \"https://www.googleapis.com/auth/userinfo.email\"\n      );\n      url.searchParams.set(\"prompt\", \"consent\");\n      url.searchParams.set(\"access_type\", \"offline\");\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    } else if (provider === \"apple\") {\n      if (\n        !process.env.REACT_APP_APPLE_CLIENT_ID ||\n        !process.env.REACT_APP_APPLE_REDIRECT_URI\n      ) {\n        throw new Error(\"Apple client ID or redirect URI is not set.\");\n      }\n\n      const state = crypto.randomUUID();\n      localStorage.setItem(\"apple_oauth_state\", state);\n\n      const url = new URL(\"https://appleid.apple.com/auth/authorize\");\n      url.searchParams.set(\"client_id\", process.env.REACT_APP_APPLE_CLIENT_ID);\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_APPLE_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code id_token\");\n      url.searchParams.set(\"scope\", \"\"); // name email\n      url.searchParams.set(\"response_mode\", \"fragment\"); // from_post\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    } else if (provider === \"naver\") {\n      if (\n        !process.env.REACT_APP_NAVER_CLIENT_ID ||\n        !process.env.REACT_APP_NAVER_REDIRECT_URI\n      ) {\n        throw new Error(\"Naver client ID or redirect URI is not set.\");\n      }\n\n      const state = crypto.randomUUID();\n      localStorage.setItem(\"naver_oauth_state\", state);\n\n      const url = new URL(\"https://nid.naver.com/oauth2.0/authorize\");\n      url.searchParams.set(\"client_id\", process.env.REACT_APP_NAVER_CLIENT_ID);\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_NAVER_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code\");\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    } else if (provider === \"kakao\") {\n      if (\n        !process.env.REACT_APP_KAKAO_REST_API_KEY ||\n        !process.env.REACT_APP_KAKAO_REDIRECT_URI\n      ) {\n        throw new Error(\"Kakao client ID or redirect URI is not set.\");\n      }\n\n      const state = crypto.randomUUID();\n      localStorage.setItem(\"kakao_oauth_state\", state);\n\n      const url = new URL(\"https://kauth.kakao.com/oauth/authorize\");\n      url.searchParams.set(\n        \"client_id\",\n        process.env.REACT_APP_KAKAO_REST_API_KEY\n      );\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_KAKAO_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code\");\n      url.searchParams.set(\"scope\", \"account_email openid\");\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    } else if (provider === \"line\") {\n      if (\n        !process.env.REACT_APP_LINE_CLIENT_ID ||\n        !process.env.REACT_APP_LINE_REDIRECT_URI\n      ) {\n        throw new Error(\"Line client ID or redirect URI is not set.\");\n      }\n\n      const state = crypto.randomUUID();\n      localStorage.setItem(\"line_oauth_state\", state);\n\n      const url = new URL(\"https://access.line.me/oauth2/v2.1/authorize\");\n      url.searchParams.set(\"client_id\", process.env.REACT_APP_LINE_CLIENT_ID);\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_LINE_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code\");\n      url.searchParams.set(\"scope\", \"profile openid email\");\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    }\n  };\n\n  const handleCallback = useCallback(\n    async (provider: string, data: any) => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        if (provider === \"google\") {\n          if (\n            !process.env.REACT_APP_GOOGLE_CLIENT_ID ||\n            !process.env.REACT_APP_GOOGLE_CLIENT_SECRET ||\n            !process.env.REACT_APP_GOOGLE_REDIRECT_URI\n          ) {\n            throw new Error(\n              \"Google client ID, client secret or redirect URI is not set.\"\n            );\n          }\n\n          const { code } = data;\n\n          const getGoogleTokenData = await getGoogleToken(\n            code,\n            process.env.REACT_APP_GOOGLE_CLIENT_ID,\n            process.env.REACT_APP_GOOGLE_CLIENT_SECRET,\n            process.env.REACT_APP_GOOGLE_REDIRECT_URI\n          );\n\n          const getGoogleTokeninfoData = await getGoogleTokeninfo(\n            getGoogleTokenData.id_token\n          );\n\n          await loginV2(\n            getGoogleTokeninfoData.email,\n            getGoogleTokenData.id_token,\n            provider\n          );\n        } else if (provider === \"apple\") {\n          if (\n            !process.env.REACT_APP_APPLE_CLIENT_ID ||\n            !process.env.REACT_APP_APPLE_REDIRECT_URI ||\n            !process.env.REACT_APP_APPLE_TEAM_ID ||\n            !process.env.REACT_APP_APPLE_KEY_ID ||\n            !process.env.REACT_APP_APPLE_PRIVATE_KEY\n          ) {\n            throw new Error(\n              \"Apple client ID, redirect URI, team ID, key ID or private key is not set.\"\n            );\n          }\n\n          const { code, id_token } = data;\n\n          await verifyAppleToken(\n            id_token,\n            process.env.REACT_APP_APPLE_CLIENT_ID\n          );\n\n          const APPLE_CLIENT_SECRET = await createAppleClientSecret(\n            id_token,\n            process.env.REACT_APP_APPLE_PRIVATE_KEY,\n            process.env.REACT_APP_APPLE_TEAM_ID,\n            process.env.REACT_APP_APPLE_KEY_ID\n          );\n\n          const getAppleTokenData = await getAppleToken(\n            code,\n            process.env.REACT_APP_APPLE_CLIENT_ID,\n            APPLE_CLIENT_SECRET,\n            process.env.REACT_APP_APPLE_REDIRECT_URI\n          );\n\n          const getAppleDecodedTokenData = JSON.parse(\n            atob(getAppleTokenData?.id_token?.split(\".\")[1])\n          );\n\n          await verifyAppleToken(\n            id_token,\n            process.env.REACT_APP_APPLE_CLIENT_ID\n          );\n\n          await loginV2(\n            getAppleDecodedTokenData.email,\n            getAppleTokenData.id_token,\n            provider\n          );\n        } else if (provider === \"naver\") {\n          if (\n            !process.env.REACT_APP_NAVER_CLIENT_ID ||\n            !process.env.REACT_APP_NAVER_CLIENT_SECRET ||\n            !process.env.REACT_APP_NAVER_REDIRECT_URI\n          ) {\n            throw new Error(\n              \"Naver client ID, client secret or redirect URI is not set.\"\n            );\n          }\n\n          const { code } = data;\n\n          const getNaverTokenData = await getNaverToken(\n            code,\n            process.env.REACT_APP_NAVER_CLIENT_ID,\n            process.env.REACT_APP_NAVER_CLIENT_SECRET,\n            process.env.REACT_APP_NAVER_REDIRECT_URI\n          );\n\n          const getNaverTokeninfoData = await getNaverTokeninfo(\n            getNaverTokenData.access_token\n          );\n\n          await loginV2(\n            getNaverTokeninfoData.response.email,\n            getNaverTokenData.access_token,\n            provider\n          );\n        } else if (provider === \"kakao\") {\n          if (\n            !process.env.REACT_APP_KAKAO_REST_API_KEY ||\n            !process.env.REACT_APP_KAKAO_REDIRECT_URI\n          ) {\n            throw new Error(\"Kakao client ID or redirect URI is not set.\");\n          }\n\n          const { code } = data;\n\n          const getKakaoTokenData = await getKakaoToken(\n            code,\n            process.env.REACT_APP_KAKAO_REST_API_KEY,\n            process.env.REACT_APP_KAKAO_REDIRECT_URI\n          );\n\n          await verifyKakaoToken(\n            getKakaoTokenData.id_token,\n            process.env.REACT_APP_KAKAO_REST_API_KEY\n          );\n\n          const getKakaoTokeninfoData = await getKakaoTokeninfo(\n            getKakaoTokenData.access_token\n          );\n\n          await loginV2(\n            getKakaoTokeninfoData.kakao_account.email,\n            getKakaoTokenData.id_token,\n            provider\n          );\n        } else if (provider === \"line\") {\n          if (\n            !process.env.REACT_APP_LINE_CLIENT_ID ||\n            !process.env.REACT_APP_LINE_CLIENT_SECRET ||\n            !process.env.REACT_APP_LINE_REDIRECT_URI\n          ) {\n            throw new Error(\n              \"Line client ID, client secret or redirect URI is not set.\"\n            );\n          }\n\n          const { code } = data;\n\n          const getLineTokenData = await getLineToken(\n            code,\n            process.env.REACT_APP_LINE_CLIENT_ID,\n            process.env.REACT_APP_LINE_CLIENT_SECRET,\n            process.env.REACT_APP_LINE_REDIRECT_URI\n          );\n\n          const getLineTokeninfoData = await getLineTokeninfo(\n            getLineTokenData.id_token,\n            process.env.REACT_APP_LINE_CLIENT_ID\n          );\n\n          await loginV2(\n            getLineTokeninfoData.email,\n            getLineTokenData.id_token,\n            provider\n          );\n        } else {\n          throw new Error(\"Invalid provider.\");\n        }\n      } catch (error: any) {\n        if (error) {\n          setError(error);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [loginV2, error, navigate]\n  );\n\n  useEffect(() => {\n    const provider = localStorage.getItem(\"provider\");\n\n    if (provider === \"google\") {\n      const params = new URLSearchParams(location.search);\n\n      const code = params.get(\"code\");\n\n      const returnedState = params.get(\"state\");\n      const storedState = localStorage.getItem(\"google_oauth_state\");\n\n      const data = {\n        code,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    } else if (provider === \"apple\") {\n      const hashParams = new URLSearchParams(location.hash.slice(1));\n\n      const code = hashParams.get(\"code\");\n      const id_token = hashParams.get(\"id_token\");\n\n      const returnedState = hashParams.get(\"state\");\n      const storedState = localStorage.getItem(\"apple_oauth_state\");\n\n      const data = {\n        code,\n        id_token,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    } else if (provider === \"naver\") {\n      const params = new URLSearchParams(location.search);\n\n      const code = params.get(\"code\");\n\n      const returnedState = params.get(\"state\");\n      const storedState = localStorage.getItem(\"naver_oauth_state\");\n\n      const data = {\n        code,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    } else if (provider === \"kakao\") {\n      const params = new URLSearchParams(location.search);\n\n      const code = params.get(\"code\");\n\n      const returnedState = params.get(\"state\");\n      const storedState = localStorage.getItem(\"kakao_oauth_state\");\n\n      const data = {\n        code,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    } else if (provider === \"line\") {\n      const params = new URLSearchParams(location.search);\n\n      const code = params.get(\"code\");\n\n      const returnedState = params.get(\"state\");\n      const storedState = localStorage.getItem(\"line_oauth_state\");\n\n      const data = {\n        code,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    }\n  }, [location.search, location.hash]);\n\n  return (\n    <div style={metaContainerStyle}>\n      <div style={containerStyle}>\n        <div style={titleContainerStyle}>\n          <span\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"24px\",\n              fontSize: \"20px\",\n              fontWeight: \"bold\",\n              color: \"#333333\",\n            }}\n          >\n            ABC WaaS Login\n          </span>\n        </div>\n\n        <div style={contentContainerStyle}>\n          {providers.map((item) => (\n            <button\n              key={item.type}\n              onClick={() => handleRedirect(item.type)}\n              disabled={loading}\n              style={{\n                ...buttonBaseStyle,\n                backgroundColor: item.backgroundColor,\n                color: item.textColor,\n                border: item.border,\n              }}\n              onMouseEnter={(event) =>\n                (event.currentTarget.style.backgroundColor = item.hoverColor)\n              }\n              onMouseLeave={(event) =>\n                (event.currentTarget.style.backgroundColor =\n                  item.backgroundColor)\n              }\n            >\n              {loading && service === item.type ? (\n                <img\n                  src={LoadingAnimation}\n                  alt=\"loading\"\n                  style={{ width: \"24px\", height: \"24px\" }}\n                />\n              ) : (\n                <>\n                  <img\n                    src={item.icon}\n                    alt={`${item.type} icon`}\n                    style={{\n                      width: \"24px\",\n                      height: \"24px\",\n                    }}\n                  />\n                  {item.label}\n                </>\n              )}\n            </button>\n          ))}\n\n          {/* Error Message */}\n          <div\n            style={{\n              width: \"100%\",\n              minHeight: \"31px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {error?.message && (\n              <span\n                style={{\n                  color: \"red\",\n                  textAlign: \"center\",\n                  display: \"block\",\n                  width: \"100%\",\n                  marginBottom: \"12px\",\n                }}\n              >\n                {error.message}\n              </span>\n            )}\n          </div>\n          {/*  */}\n\n          {/* Copyright */}\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <span\n              style={{\n                color: \"#666666\",\n                textAlign: \"center\",\n                display: \"block\",\n                width: \"100%\",\n                fontSize: \"10px\",\n              }}\n            >\n              © AhnLab Blockchain Company. All rights reserved.\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Login };\n"]}