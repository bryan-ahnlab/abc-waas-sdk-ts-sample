{"version":3,"sources":["../src/utilities/google.ts","../src/utilities/naver.ts","../src/utilities/line.ts","../src/utilities/kakao.ts","../src/utilities/apple.ts","../src/utilities/common.ts","../src/components/Login.tsx","../src/components/Logout.tsx"],"names":["createRemoteJWKSet","jwtVerify","SignJWT","useState","useLogin","useCallback","_a","useEffect","jsxs","jsx","Fragment","buttonBaseStyle","useLogout"],"mappings":"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","file":"index.js","sourcesContent":["// src/utilities/google.ts\n\nexport const getGoogleToken = async (\n  code: string,\n  clientId: string,\n  clientSecret: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    const response = await fetch(\"https://oauth2.googleapis.com/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.id_token) {\n      throw new Error(\"Failed to receive id_token from Google.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getGoogleTokeninfo = async (idToken: string) => {\n  try {\n    const payload = new URLSearchParams({\n      idToken,\n    });\n\n    const response = await fetch(\n      \"https://www.googleapis.com/oauth2/v1/tokeninfo\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: payload.toString(),\n      }\n    );\n\n    const data = await response.json();\n\n    if (!data?.email) {\n      throw new Error(\"Failed to receive email from Google.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/naver.ts\n\nexport const getNaverToken = async (\n  code: string,\n  clientId: string,\n  clientSecret: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    /* https://nid.naver.com/oauth2.0/token */\n    const response = await fetch(\"/proxy/naver/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.access_token) {\n      throw new Error(\"Failed to receive access_token from Naver.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getNaverTokeninfo = async (accessToken: string) => {\n  try {\n    /* https://openapi.naver.com/v1/nid/me */\n    const response = await fetch(\"/proxy/naver/tokeninfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    const data = await response.json();\n\n    if (!data?.message || data?.message !== \"success\") {\n      throw new Error(\"Failed to receive message from Naver.\");\n    }\n\n    if (!data?.resultcode || data?.resultcode !== \"00\") {\n      throw new Error(\"Failed to receive resultcode from Naver.\");\n    }\n\n    if (!data?.response?.email) {\n      throw new Error(\"Failed to receive email from Naver.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/line.ts\n\nexport const getLineToken = async (\n  code: string,\n  clientId: string,\n  clientSecret: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    const response = await fetch(\"https://api.line.me/oauth2/v2.1/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.id_token) {\n      throw new Error(\"Failed to receive id_token from Line.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getLineTokeninfo = async (idToken: string, clientId: string) => {\n  try {\n    const payload = new URLSearchParams({\n      id_token: idToken,\n      client_id: clientId,\n    });\n\n    const response = await fetch(\"https://api.line.me/oauth2/v2.1/verify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.email) {\n      throw new Error(\"Failed to receive email from Line.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/kakao.ts\n\nimport { createRemoteJWKSet, jwtVerify } from \"jose\";\n\nexport const getKakaoToken = async (\n  code: string,\n  clientId: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    const response = await fetch(\"https://kauth.kakao.com/oauth/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.id_token) {\n      throw new Error(\"Failed to receive id_token from Kakao.\");\n    }\n\n    if (!data?.access_token) {\n      throw new Error(\"Failed to receive access_token from Kakao.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const verifyKakaoToken = async (idToken: string, restApiKey: string) => {\n  try {\n    const KAKAO_ISS = \"https://kauth.kakao.com\";\n    const KAKAO_JWKS_URL = `${KAKAO_ISS}/.well-known/jwks.json`;\n\n    const kakaoJwks = createRemoteJWKSet(new URL(KAKAO_JWKS_URL));\n\n    const { payload: data } = await jwtVerify(idToken, kakaoJwks, {\n      issuer: KAKAO_ISS,\n      audience: restApiKey,\n    });\n\n    const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n\n    if (!data?.email) {\n      throw new Error(\"Failed to receive email from Kakao.\");\n    }\n\n    if (!data?.iss || data?.iss !== KAKAO_ISS) {\n      throw new Error(\"Invalid issuer from Kakao.\");\n    }\n\n    if (!data?.aud || data?.aud !== restApiKey) {\n      throw new Error(\"Invalid audience from Kakao.\");\n    }\n\n    if (!data?.exp || currentTimeInSeconds >= data?.exp) {\n      throw new Error(\"id_token is expired from Kakao.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getKakaoTokeninfo = async (accessToken: string) => {\n  try {\n    const response = await fetch(\"https://kapi.kakao.com/v2/user/me\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    const data = await response.json();\n\n    if (!data?.kakao_account?.email) {\n      throw new Error(\"Failed to receive email from Kakao.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/apple.ts\n\nimport { createRemoteJWKSet, jwtVerify, SignJWT } from \"jose\";\n\nexport const getAppleToken = async (\n  code: string,\n  clientId: string,\n  clientSecret: string,\n  redirectUri: string\n) => {\n  try {\n    const payload = new URLSearchParams({\n      code,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: \"authorization_code\",\n    });\n\n    /* https://appleid.apple.com/auth/token */\n    const response = await fetch(\"/proxy/apple/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: payload.toString(),\n    });\n\n    const data = await response.json();\n\n    if (!data?.id_token) {\n      throw new Error(\"Failed to receive id_token from Apple.\");\n    }\n\n    const decodedData = JSON.parse(atob(data?.id_token?.split(\".\")[1]));\n\n    if (!decodedData?.email) {\n      throw new Error(\"Failed to receive email from Apple.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const verifyAppleToken = async (idToken: string, clientId: string) => {\n  try {\n    const APPLE_ISS = \"https://appleid.apple.com\";\n    const APPLE_JWKS_URL = \"https://appleid.apple.com/auth/keys\";\n\n    const appleJwks = createRemoteJWKSet(new URL(APPLE_JWKS_URL));\n\n    const { payload: data } = await jwtVerify(idToken, appleJwks, {\n      issuer: APPLE_ISS,\n      audience: clientId,\n    });\n\n    const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n\n    if (!data?.email) {\n      throw new Error(\"Failed to receive email from Apple.\");\n    }\n\n    if (!data?.iss || data?.iss !== APPLE_ISS) {\n      throw new Error(\"Invalid issuer from Apple.\");\n    }\n\n    if (!data?.aud || data?.aud !== clientId) {\n      throw new Error(\"Invalid audience from Apple.\");\n    }\n\n    if (!data?.exp || currentTimeInSeconds >= data?.exp) {\n      throw new Error(\"id_token is expired from Apple.\");\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const createAppleClientSecret = async (\n  idToken: string,\n  privateKey: string,\n  teamId: string,\n  keyId: string\n) => {\n  try {\n    const alg = \"ES256\" as const;\n\n    const base64Payload = idToken.split(\".\")[1];\n    const payloadString = atob(base64Payload);\n    const payload = JSON.parse(payloadString);\n\n    const audience = payload.aud;\n    const issuer = payload.iss;\n\n    if (!audience || !issuer) {\n      throw new Error(\"Invalid id_token: missing aud or iss.\");\n    }\n\n    const base64Key = privateKey\n      .replace(\"-----BEGIN PRIVATE KEY-----\", \"\")\n      .replace(\"-----END PRIVATE KEY-----\", \"\")\n      .replace(/\\s+/g, \"\");\n    const rawKey = Uint8Array.from(atob(base64Key), (c) => c.charCodeAt(0));\n\n    const cryptoKey = await crypto.subtle.importKey(\n      \"pkcs8\",\n      rawKey.buffer,\n      { name: \"ECDSA\", namedCurve: \"P-256\" },\n      false,\n      [\"sign\"]\n    );\n\n    const jwt = await new SignJWT({})\n      .setProtectedHeader({ alg, kid: keyId })\n      .setIssuer(teamId)\n      .setIssuedAt()\n      .setExpirationTime(\"1h\")\n      .setAudience(issuer)\n      .setSubject(audience)\n      .sign(cryptoKey);\n\n    return jwt;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// src/utilities/common.ts\n\n/**\n * 크로스 브라우저 호환성을 가진 UUID v4 생성 함수\n * crypto.randomUUID()가 지원되지 않는 브라우저를 위한 폴백 구현\n */\nexport const generateUUID = (): string => {\n  // crypto.randomUUID()가 지원되는 경우 사용\n  if (typeof crypto !== \"undefined\" && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n\n  // crypto.getRandomValues가 지원되는 경우 사용\n  if (typeof crypto !== \"undefined\" && crypto.getRandomValues) {\n    const array = new Uint8Array(16);\n    crypto.getRandomValues(array);\n\n    // UUID v4 형식으로 변환\n    array[6] = (array[6] & 0x0f) | 0x40; // version 4\n    array[8] = (array[8] & 0x3f) | 0x80; // variant\n\n    return Array.from(array, (byte) => byte.toString(16).padStart(2, \"0\"))\n      .join(\"\")\n      .replace(/(.{8})(.{4})(.{4})(.{4})(.{12})/, \"$1-$2-$3-$4-$5\");\n  }\n\n  // Math.random 사용 (보안성은 낮지만 호환성 보장)\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","// src/components/Login.tsx\n\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { useLogin } from \"abc-waas-core-sdk\";\n\nimport GoogleIcon from \"@/assets/icons/providers/icon_google.svg\";\nimport AppleIcon from \"@/assets/icons/providers/icon_apple.svg\";\nimport KakaoIcon from \"@/assets/icons/providers/icon_kakao.svg\";\nimport NaverIcon from \"@/assets/icons/providers/icon_naver.svg\";\nimport LineIcon from \"@/assets/icons/providers/icon_line.svg\";\n\nimport LoadingAnimation from \"@/assets/animations/common/animation_loading.svg\";\n\nimport { getGoogleToken, getGoogleTokeninfo } from \"@/utilities/google\";\nimport { getNaverToken, getNaverTokeninfo } from \"@/utilities/naver\";\nimport { getLineToken, getLineTokeninfo } from \"@/utilities/line\";\nimport {\n  getKakaoToken,\n  getKakaoTokeninfo,\n  verifyKakaoToken,\n} from \"@/utilities/kakao\";\nimport {\n  createAppleClientSecret,\n  getAppleToken,\n  verifyAppleToken,\n} from \"@/utilities/apple\";\nimport { generateUUID } from \"@/utilities/common\";\n\ntype Providers = \"google\" | \"apple\" | \"kakao\" | \"naver\" | \"line\";\ntype Language = \"ko\" | \"en\";\n\nconst LOGIN_BUTTON_TEXT = {\n  google: {\n    ko: \"Google로 계속하기\",\n    en: \"Continue with Google\",\n  },\n  apple: {\n    ko: \"Apple로 계속하기\",\n    en: \"Continue with Apple\",\n  },\n  naver: {\n    ko: \"네이버로 계속하기\",\n    en: \"Continue with NAVER\",\n  },\n  kakao: {\n    ko: \"카카오로 계속하기\",\n    en: \"Continue with Kakao\",\n  },\n  line: {\n    ko: \"LINE으로 계속하기\",\n    en: \"Continue with LINE\",\n  },\n};\n\nconst LOGIN_TITLE_TEXT = {\n  ko: \"안랩 블록체인 컴퍼니\\nWallet-as-a-Service\",\n  en: \"AhnLab Blockchain Company\\nWallet-as-a-Service\",\n};\n\nconst LOGIN_COPYRIGHT_TEXT = {\n  ko: \"© AhnLab Blockchain Company. All rights reserved.\",\n  en: \"© AhnLab Blockchain Company. All rights reserved.\",\n};\n\nconst providers: {\n  type: Providers;\n  label: any;\n  icon: string;\n  backgroundColor: string;\n  textColor: string;\n  hoverColor: string;\n  border: string;\n}[] = [\n  {\n    type: \"google\",\n    label: LOGIN_BUTTON_TEXT.google,\n    icon: GoogleIcon,\n    backgroundColor: \"#ffffff\",\n    textColor: \"#000000\",\n    hoverColor: \"#f7f7f7\",\n    border: \"1px solid #dadce0\",\n  },\n  {\n    type: \"apple\",\n    label: LOGIN_BUTTON_TEXT.apple,\n    icon: AppleIcon,\n    backgroundColor: \"#ffffff\",\n    textColor: \"#000000\",\n    hoverColor: \"#f7f7f7\",\n    border: \"1px solid #dadce0\",\n  },\n  {\n    type: \"naver\",\n    label: LOGIN_BUTTON_TEXT.naver,\n    icon: NaverIcon,\n    backgroundColor: \"#ffffff\",\n    textColor: \"#000000\",\n    hoverColor: \"#f7f7f7\",\n    border: \"1px solid #dadce0\",\n  },\n  {\n    type: \"kakao\",\n    label: LOGIN_BUTTON_TEXT.kakao,\n    icon: KakaoIcon,\n    backgroundColor: \"#FEE500\",\n    textColor: \"#000000\",\n    hoverColor: \"#ecd900\",\n    border: \"1px solid #FEE500\",\n  },\n  {\n    type: \"line\",\n    label: LOGIN_BUTTON_TEXT.line,\n    icon: LineIcon,\n    backgroundColor: \"#03C75A\",\n    textColor: \"#ffffff\",\n    hoverColor: \"#02b94e\",\n    border: \"1px solid #03C75A\",\n  },\n];\n\nconst metaContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  minHeight: \"100vh\",\n  backgroundColor: \"#f5f5f5\",\n  padding: \"0px 20px\",\n} as const;\n\nconst containerStyle = {\n  width: \"100%\",\n  maxWidth: \"340px\",\n  boxSizing: \"border-box\",\n  padding: \"40px 30px\",\n  borderRadius: \"30px\",\n  color: \"#333\",\n  boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.05)\",\n  whiteSpace: \"pre-wrap\",\n  wordBreak: \"break-all\",\n  backgroundColor: \"#ffffff\",\n} as const;\n\nconst titleContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n} as const;\n\nconst contentContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n} as const;\n\nconst buttonBaseStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  padding: \"12px 16px\",\n  fontSize: \"0.9rem\",\n  borderRadius: \"30px\",\n  width: \"100%\",\n  marginBottom: \"16px\",\n  cursor: \"pointer\",\n  transition: \"all 0.1s ease-in-out\",\n  wordBreak: \"break-all\",\n  flexWrap: \"wrap\",\n  gap: \"12px\",\n} as const;\n\nconst languageSwitchStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginBottom: \"24px\",\n  gap: \"8px\",\n} as const;\n\nconst languageButtonBaseStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  fontSize: \"0.8rem\",\n  borderRadius: \"20px\",\n  cursor: \"pointer\",\n  transition: \"all 0.1s ease-in-out\",\n} as const;\n\nconst activeLanguageButtonStyle = {\n  ...languageButtonBaseStyle,\n  backgroundColor: \"#5B00EF\",\n  color: \"#ffffff\",\n  border: \"1px solid #5B00EF\",\n} as const;\n\nconst inactiveLanguageButtonStyle = {\n  ...languageButtonBaseStyle,\n  backgroundColor: \"#ffffff\",\n  color: \"#666666\",\n  border: \"1px solid #dadce0\",\n} as const;\n\nexport default function Login() {\n  const [language, setLanguage] = useState<Language>(\"ko\");\n\n  const location = {\n    search: window.location.search,\n    hash: window.location.hash,\n    pathname: window.location.pathname,\n  };\n\n  const { loginV2, loginInfo, setLoginInfo, service } = useLogin();\n\n  const handleRedirect = useCallback((provider: Providers) => {\n    localStorage.setItem(\"provider\", provider);\n\n    if (provider === \"google\") {\n      if (\n        !process.env.REACT_APP_GOOGLE_CLIENT_ID ||\n        !process.env.REACT_APP_GOOGLE_REDIRECT_URI\n      ) {\n        throw new Error(\"Google client ID or redirect URI is not set.\");\n      }\n\n      const state = generateUUID();\n      localStorage.setItem(\"google_oauth_state\", state);\n\n      const url = new URL(\"https://accounts.google.com/o/oauth2/v2/auth\");\n      url.searchParams.set(\"client_id\", process.env.REACT_APP_GOOGLE_CLIENT_ID);\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_GOOGLE_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code\");\n      url.searchParams.set(\n        \"scope\",\n        \"https://www.googleapis.com/auth/userinfo.email\"\n      );\n      url.searchParams.set(\"prompt\", \"consent\");\n      url.searchParams.set(\"access_type\", \"offline\");\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    } else if (provider === \"apple\") {\n      if (\n        !process.env.REACT_APP_APPLE_CLIENT_ID ||\n        !process.env.REACT_APP_APPLE_REDIRECT_URI\n      ) {\n        throw new Error(\"Apple client ID or redirect URI is not set.\");\n      }\n\n      const state = generateUUID();\n      localStorage.setItem(\"apple_oauth_state\", state);\n\n      const url = new URL(\"https://appleid.apple.com/auth/authorize\");\n      url.searchParams.set(\"client_id\", process.env.REACT_APP_APPLE_CLIENT_ID);\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_APPLE_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code id_token\");\n      url.searchParams.set(\"scope\", \"\"); // name email\n      url.searchParams.set(\"response_mode\", \"fragment\"); // from_post\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    } else if (provider === \"naver\") {\n      if (\n        !process.env.REACT_APP_NAVER_CLIENT_ID ||\n        !process.env.REACT_APP_NAVER_REDIRECT_URI\n      ) {\n        throw new Error(\"Naver client ID or redirect URI is not set.\");\n      }\n\n      const state = generateUUID();\n      localStorage.setItem(\"naver_oauth_state\", state);\n\n      const url = new URL(\"https://nid.naver.com/oauth2.0/authorize\");\n      url.searchParams.set(\"client_id\", process.env.REACT_APP_NAVER_CLIENT_ID);\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_NAVER_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code\");\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    } else if (provider === \"kakao\") {\n      if (\n        !process.env.REACT_APP_KAKAO_REST_API_KEY ||\n        !process.env.REACT_APP_KAKAO_REDIRECT_URI\n      ) {\n        throw new Error(\"Kakao client ID or redirect URI is not set.\");\n      }\n\n      const state = generateUUID();\n      localStorage.setItem(\"kakao_oauth_state\", state);\n\n      const url = new URL(\"https://kauth.kakao.com/oauth/authorize\");\n      url.searchParams.set(\n        \"client_id\",\n        process.env.REACT_APP_KAKAO_REST_API_KEY\n      );\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_KAKAO_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code\");\n      url.searchParams.set(\"scope\", \"account_email openid\");\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    } else if (provider === \"line\") {\n      if (\n        !process.env.REACT_APP_LINE_CLIENT_ID ||\n        !process.env.REACT_APP_LINE_REDIRECT_URI\n      ) {\n        throw new Error(\"Line client ID or redirect URI is not set.\");\n      }\n\n      const state = generateUUID();\n      localStorage.setItem(\"line_oauth_state\", state);\n\n      const url = new URL(\"https://access.line.me/oauth2/v2.1/authorize\");\n      url.searchParams.set(\"client_id\", process.env.REACT_APP_LINE_CLIENT_ID);\n      url.searchParams.set(\n        \"redirect_uri\",\n        process.env.REACT_APP_LINE_REDIRECT_URI\n      );\n      url.searchParams.set(\"response_type\", \"code\");\n      url.searchParams.set(\"scope\", \"profile openid email\");\n      url.searchParams.set(\"state\", state);\n\n      window.location.href = url.toString();\n    }\n  }, []);\n\n  const handleCallback = useCallback(async (provider: string, data: any) => {\n    try {\n      setLoginInfo({\n        loading: true,\n        error: loginInfo.error,\n        status: loginInfo.status,\n      });\n\n      if (provider === \"google\") {\n        if (\n          !process.env.REACT_APP_GOOGLE_CLIENT_ID ||\n          !process.env.REACT_APP_GOOGLE_CLIENT_SECRET ||\n          !process.env.REACT_APP_GOOGLE_REDIRECT_URI\n        ) {\n          throw new Error(\n            \"Google client ID, client secret or redirect URI is not set.\"\n          );\n        }\n\n        const { code } = data;\n\n        const getGoogleTokenData = await getGoogleToken(\n          code,\n          process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          process.env.REACT_APP_GOOGLE_CLIENT_SECRET,\n          process.env.REACT_APP_GOOGLE_REDIRECT_URI\n        );\n\n        const getGoogleTokeninfoData = await getGoogleTokeninfo(\n          getGoogleTokenData.id_token\n        );\n\n        await loginV2(\n          getGoogleTokeninfoData.email,\n          getGoogleTokenData.id_token,\n          provider\n        );\n      } else if (provider === \"apple\") {\n        if (\n          !process.env.REACT_APP_APPLE_CLIENT_ID ||\n          !process.env.REACT_APP_APPLE_REDIRECT_URI ||\n          !process.env.REACT_APP_APPLE_TEAM_ID ||\n          !process.env.REACT_APP_APPLE_KEY_ID ||\n          !process.env.REACT_APP_APPLE_PRIVATE_KEY\n        ) {\n          throw new Error(\n            \"Apple client ID, redirect URI, team ID, key ID or private key is not set.\"\n          );\n        }\n\n        const { code, id_token } = data;\n\n        await verifyAppleToken(id_token, process.env.REACT_APP_APPLE_CLIENT_ID);\n\n        const APPLE_CLIENT_SECRET = await createAppleClientSecret(\n          id_token,\n          process.env.REACT_APP_APPLE_PRIVATE_KEY,\n          process.env.REACT_APP_APPLE_TEAM_ID,\n          process.env.REACT_APP_APPLE_KEY_ID\n        );\n\n        const getAppleTokenData = await getAppleToken(\n          code,\n          process.env.REACT_APP_APPLE_CLIENT_ID,\n          APPLE_CLIENT_SECRET,\n          process.env.REACT_APP_APPLE_REDIRECT_URI\n        );\n\n        const getAppleDecodedTokenData = JSON.parse(\n          atob(getAppleTokenData?.id_token?.split(\".\")[1])\n        );\n\n        await verifyAppleToken(id_token, process.env.REACT_APP_APPLE_CLIENT_ID);\n\n        await loginV2(\n          getAppleDecodedTokenData.email,\n          getAppleTokenData.id_token,\n          provider\n        );\n      } else if (provider === \"naver\") {\n        if (\n          !process.env.REACT_APP_NAVER_CLIENT_ID ||\n          !process.env.REACT_APP_NAVER_CLIENT_SECRET ||\n          !process.env.REACT_APP_NAVER_REDIRECT_URI\n        ) {\n          throw new Error(\n            \"Naver client ID, client secret or redirect URI is not set.\"\n          );\n        }\n\n        const { code } = data;\n\n        const getNaverTokenData = await getNaverToken(\n          code,\n          process.env.REACT_APP_NAVER_CLIENT_ID,\n          process.env.REACT_APP_NAVER_CLIENT_SECRET,\n          process.env.REACT_APP_NAVER_REDIRECT_URI\n        );\n\n        const getNaverTokeninfoData = await getNaverTokeninfo(\n          getNaverTokenData.access_token\n        );\n\n        await loginV2(\n          getNaverTokeninfoData.response.email,\n          getNaverTokenData.access_token,\n          provider\n        );\n      } else if (provider === \"kakao\") {\n        if (\n          !process.env.REACT_APP_KAKAO_REST_API_KEY ||\n          !process.env.REACT_APP_KAKAO_REDIRECT_URI\n        ) {\n          throw new Error(\"Kakao client ID or redirect URI is not set.\");\n        }\n\n        const { code } = data;\n\n        const getKakaoTokenData = await getKakaoToken(\n          code,\n          process.env.REACT_APP_KAKAO_REST_API_KEY,\n          process.env.REACT_APP_KAKAO_REDIRECT_URI\n        );\n\n        await verifyKakaoToken(\n          getKakaoTokenData.id_token,\n          process.env.REACT_APP_KAKAO_REST_API_KEY\n        );\n\n        const getKakaoTokeninfoData = await getKakaoTokeninfo(\n          getKakaoTokenData.access_token\n        );\n\n        await loginV2(\n          getKakaoTokeninfoData.kakao_account.email,\n          getKakaoTokenData.id_token,\n          provider\n        );\n      } else if (provider === \"line\") {\n        if (\n          !process.env.REACT_APP_LINE_CLIENT_ID ||\n          !process.env.REACT_APP_LINE_CLIENT_SECRET ||\n          !process.env.REACT_APP_LINE_REDIRECT_URI\n        ) {\n          throw new Error(\n            \"Line client ID, client secret or redirect URI is not set.\"\n          );\n        }\n\n        const { code } = data;\n\n        const getLineTokenData = await getLineToken(\n          code,\n          process.env.REACT_APP_LINE_CLIENT_ID,\n          process.env.REACT_APP_LINE_CLIENT_SECRET,\n          process.env.REACT_APP_LINE_REDIRECT_URI\n        );\n\n        const getLineTokeninfoData = await getLineTokeninfo(\n          getLineTokenData.id_token,\n          process.env.REACT_APP_LINE_CLIENT_ID\n        );\n\n        await loginV2(\n          getLineTokeninfoData.email,\n          getLineTokenData.id_token,\n          provider\n        );\n      } else {\n        throw new Error(\"Invalid provider.\");\n      }\n    } catch (error: any) {\n      setLoginInfo({\n        loading: false,\n        error: error,\n        status: \"FAILURE\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const provider = localStorage.getItem(\"provider\");\n\n    if (provider === \"google\") {\n      const params = new URLSearchParams(location.search);\n\n      const code = params.get(\"code\");\n\n      const returnedState = params.get(\"state\");\n      const storedState = localStorage.getItem(\"google_oauth_state\");\n\n      const data = {\n        code,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    } else if (provider === \"apple\") {\n      const hashParams = new URLSearchParams(location.hash.slice(1));\n\n      const code = hashParams.get(\"code\");\n      const id_token = hashParams.get(\"id_token\");\n\n      const returnedState = hashParams.get(\"state\");\n      const storedState = localStorage.getItem(\"apple_oauth_state\");\n\n      const data = {\n        code,\n        id_token,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    } else if (provider === \"naver\") {\n      const params = new URLSearchParams(location.search);\n\n      const code = params.get(\"code\");\n\n      const returnedState = params.get(\"state\");\n      const storedState = localStorage.getItem(\"naver_oauth_state\");\n\n      const data = {\n        code,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    } else if (provider === \"kakao\") {\n      const params = new URLSearchParams(location.search);\n\n      const code = params.get(\"code\");\n\n      const returnedState = params.get(\"state\");\n      const storedState = localStorage.getItem(\"kakao_oauth_state\");\n\n      const data = {\n        code,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    } else if (provider === \"line\") {\n      const params = new URLSearchParams(location.search);\n\n      const code = params.get(\"code\");\n\n      const returnedState = params.get(\"state\");\n      const storedState = localStorage.getItem(\"line_oauth_state\");\n\n      const data = {\n        code,\n      };\n\n      if (code && returnedState === storedState) {\n        handleCallback(provider, data);\n      }\n    }\n  }, [location.search, location.hash]);\n\n  return (\n    <div style={metaContainerStyle}>\n      <div style={containerStyle}>\n        <div style={titleContainerStyle}>\n          <span\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"36px\",\n              fontSize: \"1rem\",\n              fontWeight: \"bold\",\n              color: \"#333333\",\n              whiteSpace: \"pre-line\",\n              lineHeight: \"1.5\",\n            }}\n          >\n            {LOGIN_TITLE_TEXT[language]}\n          </span>\n        </div>\n\n        <div style={contentContainerStyle}>\n          {providers.map((item) => (\n            <button\n              key={item.type}\n              onClick={() => handleRedirect(item.type)}\n              disabled={loginInfo.loading}\n              style={{\n                ...buttonBaseStyle,\n                backgroundColor: item.backgroundColor,\n                color: item.textColor,\n                border: item.border,\n              }}\n              onMouseEnter={(event) =>\n                (event.currentTarget.style.backgroundColor = item.hoverColor)\n              }\n              onMouseLeave={(event) =>\n                (event.currentTarget.style.backgroundColor =\n                  item.backgroundColor)\n              }\n            >\n              {loginInfo.loading && service === item.type ? (\n                <img\n                  src={LoadingAnimation}\n                  alt=\"loading\"\n                  style={{ width: \"24px\", height: \"24px\" }}\n                />\n              ) : (\n                <>\n                  <img\n                    src={item.icon}\n                    alt={`${item.type} icon`}\n                    style={{\n                      width: \"24px\",\n                      height: \"24px\",\n                    }}\n                  />\n                  {item.label[language]}\n                </>\n              )}\n            </button>\n          ))}\n\n          {/* Error Message */}\n          <div\n            style={{\n              width: \"100%\",\n              minHeight: \"48px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {loginInfo.error?.message && (\n              <span\n                style={{\n                  color: \"red\",\n                  textAlign: \"center\",\n                  display: \"block\",\n                  width: \"100%\",\n                  marginBottom: \"24px\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {loginInfo.error.message}\n              </span>\n            )}\n          </div>\n          {/*  */}\n\n          {/* Language Switch */}\n          <div style={languageSwitchStyle}>\n            <button\n              onClick={() => setLanguage(\"ko\")}\n              style={\n                language === \"ko\"\n                  ? activeLanguageButtonStyle\n                  : inactiveLanguageButtonStyle\n              }\n              onMouseEnter={(event) => {\n                if (language !== \"ko\") {\n                  event.currentTarget.style.backgroundColor = \"#f7f7f7\";\n                }\n              }}\n              onMouseLeave={(event) => {\n                if (language !== \"ko\") {\n                  event.currentTarget.style.backgroundColor = \"#ffffff\";\n                }\n              }}\n            >\n              한국어\n            </button>\n            <button\n              onClick={() => setLanguage(\"en\")}\n              style={\n                language === \"en\"\n                  ? activeLanguageButtonStyle\n                  : inactiveLanguageButtonStyle\n              }\n              onMouseEnter={(event) => {\n                if (language !== \"en\") {\n                  event.currentTarget.style.backgroundColor = \"#f7f7f7\";\n                }\n              }}\n              onMouseLeave={(event) => {\n                if (language !== \"en\") {\n                  event.currentTarget.style.backgroundColor = \"#ffffff\";\n                }\n              }}\n            >\n              English\n            </button>\n          </div>\n          {/*  */}\n\n          {/* Copyright */}\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <span\n              style={{\n                color: \"#666666\",\n                textAlign: \"center\",\n                display: \"block\",\n                width: \"100%\",\n                fontSize: \"0.6rem\",\n              }}\n            >\n              {LOGIN_COPYRIGHT_TEXT[language]}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Login };\n","// src/components/Logout.tsx\n\nimport { useLogin, useLogout } from \"abc-waas-core-sdk\";\n\nimport LoadingAnimation from \"@/assets/animations/common/animation_loading.svg\";\n\nconst buttonBaseStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  padding: \"12px 16px\",\n  fontSize: \"0.9rem\",\n  borderRadius: \"30px\",\n  width: \"100%\",\n  marginBottom: \"16px\",\n  cursor: \"pointer\",\n  transition: \"all 0.2s ease-in-out\",\n  wordBreak: \"break-all\",\n  flexWrap: \"wrap\",\n  gap: \"12px\",\n  border: \"1px solid #dadce0\",\n} as const;\n\nconst activeButtonStyle = {\n  ...buttonBaseStyle,\n  backgroundColor: \"#ffffff\",\n  color: \"#000000\",\n} as const;\n\nconst inactiveButtonStyle = {\n  ...buttonBaseStyle,\n  backgroundColor: \"#f5f5f5\",\n  color: \"#999999\",\n  cursor: \"not-allowed\",\n  border: \"1px solid #e0e0e0\",\n} as const;\n\nexport default function Logout() {\n  const { logoutV2, logoutInfo, setLogoutInfo } = useLogout();\n  const { loginInfo } = useLogin();\n\n  const handleLogout = async () => {\n    if (loginInfo.status !== \"SUCCESS\" || logoutInfo.loading) return;\n\n    try {\n      setLogoutInfo({\n        loading: true,\n        error: logoutInfo.error,\n        status: logoutInfo.status,\n      });\n      await logoutV2();\n    } catch (error: any) {\n      setLogoutInfo({\n        loading: false,\n        error: error,\n        status: \"FAILURE\",\n      });\n    }\n  };\n\n  const LOGOUT_BUTTON_TEXT = \"로그아웃\";\n\n  return (\n    <button\n      onClick={handleLogout}\n      disabled={loginInfo.status !== \"SUCCESS\" || logoutInfo.loading}\n      style={\n        loginInfo.status === \"SUCCESS\" ? activeButtonStyle : inactiveButtonStyle\n      }\n      onMouseEnter={(event) => {\n        if (loginInfo.status === \"SUCCESS\" && !logoutInfo.loading) {\n          event.currentTarget.style.backgroundColor = \"#f7f7f7\";\n        }\n      }}\n      onMouseLeave={(event) => {\n        if (loginInfo.status === \"SUCCESS\" && !logoutInfo.loading) {\n          event.currentTarget.style.backgroundColor = \"#ffffff\";\n        }\n      }}\n    >\n      {logoutInfo.loading ? (\n        <img\n          src={LoadingAnimation}\n          alt=\"loading\"\n          style={{ width: \"24px\", height: \"24px\" }}\n        />\n      ) : (\n        LOGOUT_BUTTON_TEXT\n      )}\n    </button>\n  );\n}\n\nexport { Logout };\n"]}